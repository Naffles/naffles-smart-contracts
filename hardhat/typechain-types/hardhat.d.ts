/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "VRFCoordinatorV2Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRFCoordinatorV2Interface__factory>;
    getContractFactory(
      name: "VRFConsumerBaseV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRFConsumerBaseV2__factory>;
    getContractFactory(
      name: "IAllowList",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAllowList__factory>;
    getContractFactory(
      name: "IDiamondCut",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondCut__factory>;
    getContractFactory(
      name: "IExecutor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExecutor__factory>;
    getContractFactory(
      name: "IGetters",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGetters__factory>;
    getContractFactory(
      name: "IGovernance",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGovernance__factory>;
    getContractFactory(
      name: "IMailbox",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMailbox__factory>;
    getContractFactory(
      name: "IZkSync",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IZkSync__factory>;
    getContractFactory(
      name: "Diamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Diamond__factory>;
    getContractFactory(
      name: "Plonk4VerifierWithAccessToDNext",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Plonk4VerifierWithAccessToDNext__factory>;
    getContractFactory(
      name: "Verifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Verifier__factory>;
    getContractFactory(
      name: "IL1Messenger",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IL1Messenger__factory>;
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: "IERC1822ProxiableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822ProxiableUpgradeable__factory>;
    getContractFactory(
      name: "IBeaconUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeaconUpgradeable__factory>;
    getContractFactory(
      name: "ERC1967UpgradeUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967UpgradeUpgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "UUPSUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UUPSUpgradeable__factory>;
    getContractFactory(
      name: "PausableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PausableUpgradeable__factory>;
    getContractFactory(
      name: "IERC721ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "ERC721HolderUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721HolderUpgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC1822Proxiable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822Proxiable__factory>;
    getContractFactory(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeacon__factory>;
    getContractFactory(
      name: "ERC1967Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Proxy__factory>;
    getContractFactory(
      name: "ERC1967Upgrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Upgrade__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "AccessControlInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlInternal__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "IAccessControlInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlInternal__factory>;
    getContractFactory(
      name: "IOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOwnable__factory>;
    getContractFactory(
      name: "IOwnableInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOwnableInternal__factory>;
    getContractFactory(
      name: "ISafeOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeOwnable__factory>;
    getContractFactory(
      name: "ISafeOwnableInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeOwnableInternal__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "OwnableInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableInternal__factory>;
    getContractFactory(
      name: "SafeOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeOwnable__factory>;
    getContractFactory(
      name: "SafeOwnableInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeOwnableInternal__factory>;
    getContractFactory(
      name: "EnumerableMap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EnumerableMap__factory>;
    getContractFactory(
      name: "EnumerableSet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EnumerableSet__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Internal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Internal__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC173",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC173__factory>;
    getContractFactory(
      name: "IERC173Internal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC173Internal__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Internal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Internal__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Base__factory>;
    getContractFactory(
      name: "ERC165BaseInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165BaseInternal__factory>;
    getContractFactory(
      name: "IERC165Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165Base__factory>;
    getContractFactory(
      name: "IERC165BaseInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165BaseInternal__factory>;
    getContractFactory(
      name: "DiamondBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondBase__factory>;
    getContractFactory(
      name: "IDiamondBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondBase__factory>;
    getContractFactory(
      name: "DiamondFallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondFallback__factory>;
    getContractFactory(
      name: "IDiamondFallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondFallback__factory>;
    getContractFactory(
      name: "ISolidStateDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISolidStateDiamond__factory>;
    getContractFactory(
      name: "DiamondReadable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondReadable__factory>;
    getContractFactory(
      name: "IDiamondReadable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondReadable__factory>;
    getContractFactory(
      name: "SolidStateDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SolidStateDiamond__factory>;
    getContractFactory(
      name: "DiamondWritable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondWritable__factory>;
    getContractFactory(
      name: "DiamondWritableInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondWritableInternal__factory>;
    getContractFactory(
      name: "IDiamondWritable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondWritable__factory>;
    getContractFactory(
      name: "IDiamondWritableInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondWritableInternal__factory>;
    getContractFactory(
      name: "IProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IProxy__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "ERC721Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Base__factory>;
    getContractFactory(
      name: "ERC721BaseInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721BaseInternal__factory>;
    getContractFactory(
      name: "IERC721Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Base__factory>;
    getContractFactory(
      name: "IERC721BaseInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721BaseInternal__factory>;
    getContractFactory(
      name: "ERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "ISolidStateERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISolidStateERC721__factory>;
    getContractFactory(
      name: "ERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Metadata__factory>;
    getContractFactory(
      name: "ERC721MetadataInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721MetadataInternal__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721MetadataInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721MetadataInternal__factory>;
    getContractFactory(
      name: "SolidStateERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SolidStateERC721__factory>;
    getContractFactory(
      name: "AddressUtils",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AddressUtils__factory>;
    getContractFactory(
      name: "UintUtils",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UintUtils__factory>;
    getContractFactory(
      name: "Counter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Counter__factory>;
    getContractFactory(
      name: "TestNaffleDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestNaffleDiamond__factory>;
    getContractFactory(
      name: "TestValueFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestValueFacet__factory>;
    getContractFactory(
      name: "TestValueFacetUpgraded",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestValueFacetUpgraded__factory>;
    getContractFactory(
      name: "ERC721AMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721AMock__factory>;
    getContractFactory(
      name: "ETHZkSyncMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ETHZkSyncMock__factory>;
    getContractFactory(
      name: "FoundersKeyStakingMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FoundersKeyStakingMock__factory>;
    getContractFactory(
      name: "VRFCoordinatorV2Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRFCoordinatorV2Mock__factory>;
    getContractFactory(
      name: "L1MessengerMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.L1MessengerMock__factory>;
    getContractFactory(
      name: "L1NaffleAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.L1NaffleAdmin__factory>;
    getContractFactory(
      name: "L1NaffleBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.L1NaffleBase__factory>;
    getContractFactory(
      name: "L1NaffleBaseInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.L1NaffleBaseInternal__factory>;
    getContractFactory(
      name: "L1NaffleDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.L1NaffleDiamond__factory>;
    getContractFactory(
      name: "L1NaffleView",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.L1NaffleView__factory>;
    getContractFactory(
      name: "L2NaffleAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.L2NaffleAdmin__factory>;
    getContractFactory(
      name: "L2NaffleBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.L2NaffleBase__factory>;
    getContractFactory(
      name: "L2NaffleBaseInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.L2NaffleBaseInternal__factory>;
    getContractFactory(
      name: "L2NaffleDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.L2NaffleDiamond__factory>;
    getContractFactory(
      name: "L2NaffleView",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.L2NaffleView__factory>;
    getContractFactory(
      name: "FoundersKeyStaking",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FoundersKeyStaking__factory>;
    getContractFactory(
      name: "ERC1967Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Proxy__factory>;
    getContractFactory(
      name: "ERC721A__IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721A__IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC721A",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721A__factory>;
    getContractFactory(
      name: "SoulboundFoundersKey",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SoulboundFoundersKey__factory>;
    getContractFactory(
      name: "L2OpenEntryTicketAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.L2OpenEntryTicketAdmin__factory>;
    getContractFactory(
      name: "L2OpenEntryTicketBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.L2OpenEntryTicketBase__factory>;
    getContractFactory(
      name: "L2OpenEntryTicketBaseInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.L2OpenEntryTicketBaseInternal__factory>;
    getContractFactory(
      name: "L2OpenEntryTicketDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.L2OpenEntryTicketDiamond__factory>;
    getContractFactory(
      name: "L2OpenEntryTicketView",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.L2OpenEntryTicketView__factory>;
    getContractFactory(
      name: "L2PaidTicketAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.L2PaidTicketAdmin__factory>;
    getContractFactory(
      name: "L2PaidTicketBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.L2PaidTicketBase__factory>;
    getContractFactory(
      name: "L2PaidTicketBaseInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.L2PaidTicketBaseInternal__factory>;
    getContractFactory(
      name: "L2PaidTicketDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.L2PaidTicketDiamond__factory>;
    getContractFactory(
      name: "L2PaidTicketView",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.L2PaidTicketView__factory>;
    getContractFactory(
      name: "NaffleVRF",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NaffleVRF__factory>;
    getContractFactory(
      name: "ITestValueFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITestValueFacet__factory>;
    getContractFactory(
      name: "ITestValueFacetUpgraded",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITestValueFacetUpgraded__factory>;
    getContractFactory(
      name: "IERC721A",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721A__factory>;
    getContractFactory(
      name: "IFoundersKey",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFoundersKey__factory>;
    getContractFactory(
      name: "ISoulboundFoundersKey",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISoulboundFoundersKey__factory>;
    getContractFactory(
      name: "IL1NaffleAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IL1NaffleAdmin__factory>;
    getContractFactory(
      name: "IL1NaffleBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IL1NaffleBase__factory>;
    getContractFactory(
      name: "IL1NaffleBaseInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IL1NaffleBaseInternal__factory>;
    getContractFactory(
      name: "IL1NaffleView",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IL1NaffleView__factory>;
    getContractFactory(
      name: "IL2NaffleAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IL2NaffleAdmin__factory>;
    getContractFactory(
      name: "IL2NaffleBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IL2NaffleBase__factory>;
    getContractFactory(
      name: "IL2NaffleBaseInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IL2NaffleBaseInternal__factory>;
    getContractFactory(
      name: "IL2NaffleView",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IL2NaffleView__factory>;
    getContractFactory(
      name: "IL2OpenEntryTicketAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IL2OpenEntryTicketAdmin__factory>;
    getContractFactory(
      name: "IL2OpenEntryTicketBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IL2OpenEntryTicketBase__factory>;
    getContractFactory(
      name: "IL2OpenEntryTicketBaseInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IL2OpenEntryTicketBaseInternal__factory>;
    getContractFactory(
      name: "IL2OpenEntryTicketView",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IL2OpenEntryTicketView__factory>;
    getContractFactory(
      name: "IL2PaidTicketAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IL2PaidTicketAdmin__factory>;
    getContractFactory(
      name: "IL2PaidTicketBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IL2PaidTicketBase__factory>;
    getContractFactory(
      name: "IL2PaidTicketBaseInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IL2PaidTicketBaseInternal__factory>;
    getContractFactory(
      name: "IL2PaidTicketView",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IL2PaidTicketView__factory>;
    getContractFactory(
      name: "INaffleVRF",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INaffleVRF__factory>;

    getContractAt(
      name: "VRFCoordinatorV2Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VRFCoordinatorV2Interface>;
    getContractAt(
      name: "VRFConsumerBaseV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VRFConsumerBaseV2>;
    getContractAt(
      name: "IAllowList",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAllowList>;
    getContractAt(
      name: "IDiamondCut",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondCut>;
    getContractAt(
      name: "IExecutor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IExecutor>;
    getContractAt(
      name: "IGetters",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGetters>;
    getContractAt(
      name: "IGovernance",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGovernance>;
    getContractAt(
      name: "IMailbox",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMailbox>;
    getContractAt(
      name: "IZkSync",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IZkSync>;
    getContractAt(
      name: "Diamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Diamond>;
    getContractAt(
      name: "Plonk4VerifierWithAccessToDNext",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Plonk4VerifierWithAccessToDNext>;
    getContractAt(
      name: "Verifier",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Verifier>;
    getContractAt(
      name: "IL1Messenger",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IL1Messenger>;
    getContractAt(
      name: "OwnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUpgradeable>;
    getContractAt(
      name: "IERC1822ProxiableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822ProxiableUpgradeable>;
    getContractAt(
      name: "IBeaconUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeaconUpgradeable>;
    getContractAt(
      name: "ERC1967UpgradeUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967UpgradeUpgradeable>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "UUPSUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UUPSUpgradeable>;
    getContractAt(
      name: "PausableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PausableUpgradeable>;
    getContractAt(
      name: "IERC721ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721ReceiverUpgradeable>;
    getContractAt(
      name: "ERC721HolderUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721HolderUpgradeable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "AccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "IAccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC1822Proxiable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822Proxiable>;
    getContractAt(
      name: "IBeacon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeacon>;
    getContractAt(
      name: "ERC1967Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Proxy>;
    getContractAt(
      name: "ERC1967Upgrade",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Upgrade>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "AccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "AccessControlInternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlInternal>;
    getContractAt(
      name: "IAccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "IAccessControlInternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlInternal>;
    getContractAt(
      name: "IOwnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOwnable>;
    getContractAt(
      name: "IOwnableInternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOwnableInternal>;
    getContractAt(
      name: "ISafeOwnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeOwnable>;
    getContractAt(
      name: "ISafeOwnableInternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeOwnableInternal>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "OwnableInternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableInternal>;
    getContractAt(
      name: "SafeOwnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeOwnable>;
    getContractAt(
      name: "SafeOwnableInternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeOwnableInternal>;
    getContractAt(
      name: "EnumerableMap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EnumerableMap>;
    getContractAt(
      name: "EnumerableSet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EnumerableSet>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Internal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Internal>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC173",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC173>;
    getContractAt(
      name: "IERC173Internal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC173Internal>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Internal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Internal>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165Base",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Base>;
    getContractAt(
      name: "ERC165BaseInternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165BaseInternal>;
    getContractAt(
      name: "IERC165Base",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165Base>;
    getContractAt(
      name: "IERC165BaseInternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165BaseInternal>;
    getContractAt(
      name: "DiamondBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondBase>;
    getContractAt(
      name: "IDiamondBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondBase>;
    getContractAt(
      name: "DiamondFallback",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondFallback>;
    getContractAt(
      name: "IDiamondFallback",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondFallback>;
    getContractAt(
      name: "ISolidStateDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISolidStateDiamond>;
    getContractAt(
      name: "DiamondReadable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondReadable>;
    getContractAt(
      name: "IDiamondReadable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondReadable>;
    getContractAt(
      name: "SolidStateDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SolidStateDiamond>;
    getContractAt(
      name: "DiamondWritable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondWritable>;
    getContractAt(
      name: "DiamondWritableInternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondWritableInternal>;
    getContractAt(
      name: "IDiamondWritable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondWritable>;
    getContractAt(
      name: "IDiamondWritableInternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondWritableInternal>;
    getContractAt(
      name: "IProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IProxy>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "ERC721Base",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Base>;
    getContractAt(
      name: "ERC721BaseInternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721BaseInternal>;
    getContractAt(
      name: "IERC721Base",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Base>;
    getContractAt(
      name: "IERC721BaseInternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721BaseInternal>;
    getContractAt(
      name: "ERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Enumerable>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "ISolidStateERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISolidStateERC721>;
    getContractAt(
      name: "ERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Metadata>;
    getContractAt(
      name: "ERC721MetadataInternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721MetadataInternal>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721MetadataInternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721MetadataInternal>;
    getContractAt(
      name: "SolidStateERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SolidStateERC721>;
    getContractAt(
      name: "AddressUtils",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AddressUtils>;
    getContractAt(
      name: "UintUtils",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UintUtils>;
    getContractAt(
      name: "Counter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Counter>;
    getContractAt(
      name: "TestNaffleDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestNaffleDiamond>;
    getContractAt(
      name: "TestValueFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestValueFacet>;
    getContractAt(
      name: "TestValueFacetUpgraded",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestValueFacetUpgraded>;
    getContractAt(
      name: "ERC721AMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721AMock>;
    getContractAt(
      name: "ETHZkSyncMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ETHZkSyncMock>;
    getContractAt(
      name: "FoundersKeyStakingMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FoundersKeyStakingMock>;
    getContractAt(
      name: "VRFCoordinatorV2Mock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VRFCoordinatorV2Mock>;
    getContractAt(
      name: "L1MessengerMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.L1MessengerMock>;
    getContractAt(
      name: "L1NaffleAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.L1NaffleAdmin>;
    getContractAt(
      name: "L1NaffleBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.L1NaffleBase>;
    getContractAt(
      name: "L1NaffleBaseInternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.L1NaffleBaseInternal>;
    getContractAt(
      name: "L1NaffleDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.L1NaffleDiamond>;
    getContractAt(
      name: "L1NaffleView",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.L1NaffleView>;
    getContractAt(
      name: "L2NaffleAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.L2NaffleAdmin>;
    getContractAt(
      name: "L2NaffleBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.L2NaffleBase>;
    getContractAt(
      name: "L2NaffleBaseInternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.L2NaffleBaseInternal>;
    getContractAt(
      name: "L2NaffleDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.L2NaffleDiamond>;
    getContractAt(
      name: "L2NaffleView",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.L2NaffleView>;
    getContractAt(
      name: "FoundersKeyStaking",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FoundersKeyStaking>;
    getContractAt(
      name: "ERC1967Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Proxy>;
    getContractAt(
      name: "ERC721A__IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721A__IERC721Receiver>;
    getContractAt(
      name: "ERC721A",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721A>;
    getContractAt(
      name: "SoulboundFoundersKey",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SoulboundFoundersKey>;
    getContractAt(
      name: "L2OpenEntryTicketAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.L2OpenEntryTicketAdmin>;
    getContractAt(
      name: "L2OpenEntryTicketBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.L2OpenEntryTicketBase>;
    getContractAt(
      name: "L2OpenEntryTicketBaseInternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.L2OpenEntryTicketBaseInternal>;
    getContractAt(
      name: "L2OpenEntryTicketDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.L2OpenEntryTicketDiamond>;
    getContractAt(
      name: "L2OpenEntryTicketView",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.L2OpenEntryTicketView>;
    getContractAt(
      name: "L2PaidTicketAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.L2PaidTicketAdmin>;
    getContractAt(
      name: "L2PaidTicketBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.L2PaidTicketBase>;
    getContractAt(
      name: "L2PaidTicketBaseInternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.L2PaidTicketBaseInternal>;
    getContractAt(
      name: "L2PaidTicketDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.L2PaidTicketDiamond>;
    getContractAt(
      name: "L2PaidTicketView",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.L2PaidTicketView>;
    getContractAt(
      name: "NaffleVRF",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NaffleVRF>;
    getContractAt(
      name: "ITestValueFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITestValueFacet>;
    getContractAt(
      name: "ITestValueFacetUpgraded",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITestValueFacetUpgraded>;
    getContractAt(
      name: "IERC721A",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721A>;
    getContractAt(
      name: "IFoundersKey",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFoundersKey>;
    getContractAt(
      name: "ISoulboundFoundersKey",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISoulboundFoundersKey>;
    getContractAt(
      name: "IL1NaffleAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IL1NaffleAdmin>;
    getContractAt(
      name: "IL1NaffleBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IL1NaffleBase>;
    getContractAt(
      name: "IL1NaffleBaseInternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IL1NaffleBaseInternal>;
    getContractAt(
      name: "IL1NaffleView",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IL1NaffleView>;
    getContractAt(
      name: "IL2NaffleAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IL2NaffleAdmin>;
    getContractAt(
      name: "IL2NaffleBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IL2NaffleBase>;
    getContractAt(
      name: "IL2NaffleBaseInternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IL2NaffleBaseInternal>;
    getContractAt(
      name: "IL2NaffleView",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IL2NaffleView>;
    getContractAt(
      name: "IL2OpenEntryTicketAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IL2OpenEntryTicketAdmin>;
    getContractAt(
      name: "IL2OpenEntryTicketBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IL2OpenEntryTicketBase>;
    getContractAt(
      name: "IL2OpenEntryTicketBaseInternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IL2OpenEntryTicketBaseInternal>;
    getContractAt(
      name: "IL2OpenEntryTicketView",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IL2OpenEntryTicketView>;
    getContractAt(
      name: "IL2PaidTicketAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IL2PaidTicketAdmin>;
    getContractAt(
      name: "IL2PaidTicketBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IL2PaidTicketBase>;
    getContractAt(
      name: "IL2PaidTicketBaseInternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IL2PaidTicketBaseInternal>;
    getContractAt(
      name: "IL2PaidTicketView",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IL2PaidTicketView>;
    getContractAt(
      name: "INaffleVRF",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INaffleVRF>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}

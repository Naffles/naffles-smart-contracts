/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../common";

export declare namespace NaffleTypes {
  export type L1NaffleStruct = {
    tokenAddress: PromiseOrValue<string>;
    nftId: PromiseOrValue<BigNumberish>;
    naffleId: PromiseOrValue<BigNumberish>;
    owner: PromiseOrValue<string>;
    winner: PromiseOrValue<string>;
    cancelled: PromiseOrValue<boolean>;
    naffleTokenType: PromiseOrValue<BigNumberish>;
  };

  export type L1NaffleStructOutput = [
    string,
    BigNumber,
    BigNumber,
    string,
    string,
    boolean,
    number
  ] & {
    tokenAddress: string;
    nftId: BigNumber;
    naffleId: BigNumber;
    owner: string;
    winner: string;
    cancelled: boolean;
    naffleTokenType: number;
  };
}

export interface IL1NaffleViewInterface extends utils.Interface {
  functions: {
    "getAdminRole()": FunctionFragment;
    "getFoundersKeyAddress()": FunctionFragment;
    "getFoundersKeyPlaceholderAddress()": FunctionFragment;
    "getMinimumNaffleDuration()": FunctionFragment;
    "getMinimumPaidTicketPriceInWei()": FunctionFragment;
    "getMinimumPaidTicketSpots()": FunctionFragment;
    "getNaffleById(uint256)": FunctionFragment;
    "getZkSyncAddress()": FunctionFragment;
    "getZkSyncNaffleContractAddress()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "getAdminRole"
      | "getFoundersKeyAddress"
      | "getFoundersKeyPlaceholderAddress"
      | "getMinimumNaffleDuration"
      | "getMinimumPaidTicketPriceInWei"
      | "getMinimumPaidTicketSpots"
      | "getNaffleById"
      | "getZkSyncAddress"
      | "getZkSyncNaffleContractAddress"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "getAdminRole",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getFoundersKeyAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getFoundersKeyPlaceholderAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMinimumNaffleDuration",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMinimumPaidTicketPriceInWei",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMinimumPaidTicketSpots",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getNaffleById",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getZkSyncAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getZkSyncNaffleContractAddress",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "getAdminRole",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFoundersKeyAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFoundersKeyPlaceholderAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMinimumNaffleDuration",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMinimumPaidTicketPriceInWei",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMinimumPaidTicketSpots",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getNaffleById",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getZkSyncAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getZkSyncNaffleContractAddress",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IL1NaffleView extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IL1NaffleViewInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getAdminRole(
      overrides?: CallOverrides
    ): Promise<[string] & { adminRole: string }>;

    getFoundersKeyAddress(
      overrides?: CallOverrides
    ): Promise<[string] & { foundersKeyAddress: string }>;

    getFoundersKeyPlaceholderAddress(
      overrides?: CallOverrides
    ): Promise<[string] & { foundersKeyPlaceholderAddress: string }>;

    getMinimumNaffleDuration(
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { minimumNaffleDuration: BigNumber }>;

    getMinimumPaidTicketPriceInWei(
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { minimumPaidTicketPriceInWei: BigNumber }>;

    getMinimumPaidTicketSpots(
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { minimumPaidTicketSpots: BigNumber }>;

    getNaffleById(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[NaffleTypes.L1NaffleStructOutput]>;

    getZkSyncAddress(
      overrides?: CallOverrides
    ): Promise<[string] & { zkSyncAddress: string }>;

    getZkSyncNaffleContractAddress(
      overrides?: CallOverrides
    ): Promise<[string] & { zkSyncNaffleContractAddress: string }>;
  };

  getAdminRole(overrides?: CallOverrides): Promise<string>;

  getFoundersKeyAddress(overrides?: CallOverrides): Promise<string>;

  getFoundersKeyPlaceholderAddress(overrides?: CallOverrides): Promise<string>;

  getMinimumNaffleDuration(overrides?: CallOverrides): Promise<BigNumber>;

  getMinimumPaidTicketPriceInWei(overrides?: CallOverrides): Promise<BigNumber>;

  getMinimumPaidTicketSpots(overrides?: CallOverrides): Promise<BigNumber>;

  getNaffleById(
    _id: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<NaffleTypes.L1NaffleStructOutput>;

  getZkSyncAddress(overrides?: CallOverrides): Promise<string>;

  getZkSyncNaffleContractAddress(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    getAdminRole(overrides?: CallOverrides): Promise<string>;

    getFoundersKeyAddress(overrides?: CallOverrides): Promise<string>;

    getFoundersKeyPlaceholderAddress(
      overrides?: CallOverrides
    ): Promise<string>;

    getMinimumNaffleDuration(overrides?: CallOverrides): Promise<BigNumber>;

    getMinimumPaidTicketPriceInWei(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMinimumPaidTicketSpots(overrides?: CallOverrides): Promise<BigNumber>;

    getNaffleById(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<NaffleTypes.L1NaffleStructOutput>;

    getZkSyncAddress(overrides?: CallOverrides): Promise<string>;

    getZkSyncNaffleContractAddress(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    getAdminRole(overrides?: CallOverrides): Promise<BigNumber>;

    getFoundersKeyAddress(overrides?: CallOverrides): Promise<BigNumber>;

    getFoundersKeyPlaceholderAddress(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMinimumNaffleDuration(overrides?: CallOverrides): Promise<BigNumber>;

    getMinimumPaidTicketPriceInWei(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMinimumPaidTicketSpots(overrides?: CallOverrides): Promise<BigNumber>;

    getNaffleById(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getZkSyncAddress(overrides?: CallOverrides): Promise<BigNumber>;

    getZkSyncNaffleContractAddress(
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getAdminRole(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getFoundersKeyAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFoundersKeyPlaceholderAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMinimumNaffleDuration(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMinimumPaidTicketPriceInWei(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMinimumPaidTicketSpots(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getNaffleById(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getZkSyncAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getZkSyncNaffleContractAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}

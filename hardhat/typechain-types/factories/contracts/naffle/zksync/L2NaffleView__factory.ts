/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  L2NaffleView,
  L2NaffleViewInterface,
} from "../../../../contracts/naffle/zksync/L2NaffleView";

const _abi = [
  {
    inputs: [],
    name: "InsufficientFunds",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "naffleId",
        type: "uint256",
      },
    ],
    name: "InvalidNaffleId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "enum NaffleTypes.NaffleStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "InvalidNaffleStatus",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "enum NaffleTypes.NaffleType",
        name: "naffleType",
        type: "uint8",
      },
    ],
    name: "InvalidNaffleType",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "NaffleNotEndedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "NaffleSoldOut",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTicketsBought",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NotEnoughFunds",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NotEnoughOpenEntryTicketSpots",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NotEnoughPaidTicketSpots",
    type: "error",
  },
  {
    inputs: [],
    name: "OpenTicketRatioCannotBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "UnableToSendFunds",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "naffleId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageHash",
        type: "bytes32",
      },
    ],
    name: "L2NaffleCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "naffleId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "ethTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paidTicketSpots",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "freeTicketSpots",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ticketPriceInWei",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "enum NaffleTypes.NaffleType",
        name: "naffleType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum NaffleTypes.TokenContractType",
        name: "tokenContractType",
        type: "uint8",
      },
    ],
    name: "L2NaffleCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "naffleId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "winningTicketIdOnNaffle",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageHash",
        type: "bytes32",
      },
    ],
    name: "L2NaffleFinished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "naffleId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ticketIds",
        type: "uint256[]",
      },
    ],
    name: "OpenEntryTicketsUsed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "naffleId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ticketIds",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ticketPriceInWei",
        type: "uint256",
      },
    ],
    name: "TicketsBought",
    type: "event",
  },
  {
    inputs: [],
    name: "getAdminRole",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getL1NaffleContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getNaffleById",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "ethTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "naffleId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nftId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paidTicketSpots",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "freeTicketSpots",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "numberOfPaidTickets",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "numberOfOpenEntries",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ticketPriceInWei",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "winningTicketId",
            type: "uint256",
          },
          {
            internalType: "enum NaffleTypes.TicketType",
            name: "winningTicketType",
            type: "uint8",
          },
          {
            internalType: "enum NaffleTypes.NaffleStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "enum NaffleTypes.TokenContractType",
            name: "naffleTokenType",
            type: "uint8",
          },
          {
            internalType: "enum NaffleTypes.NaffleType",
            name: "naffleType",
            type: "uint8",
          },
        ],
        internalType: "struct NaffleTypes.L2Naffle",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOpenEntryRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOpenEntryTicketContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPaidTicketContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPlatformFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610652806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80636b0c47bd1161005b5780636b0c47bd146100dc5780636ea8bc10146100e4578063b3ecf236146100fa578063c7f6265f1461010157600080fd5b80631b1572e5146100825780632995e4d1146100b45780634025572f146100d4575b600080fd5b61008a610109565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100c76100c236600461049f565b61014e565b6040516100ab919061051b565b61008a610165565b61008a6101a5565b6100ec6101e5565b6040519081526020016100ab565b60006100ec565b6100ec61020f565b60006101497f02c0f6ea35402fd9c5779ec907d98e3386cbf20055e86ccc8f3265ae1f5065a05473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b6101566103ed565b61015f82610239565b92915050565b60006101497f02c0f6ea35402fd9c5779ec907d98e3386cbf20055e86ccc8f3265ae1f50659e5473ffffffffffffffffffffffffffffffffffffffff1690565b60006101497f02c0f6ea35402fd9c5779ec907d98e3386cbf20055e86ccc8f3265ae1f5065a15473ffffffffffffffffffffffffffffffffffffffff1690565b60006101497f02c0f6ea35402fd9c5779ec907d98e3386cbf20055e86ccc8f3265ae1f5065a35490565b60006101497f02c0f6ea35402fd9c5779ec907d98e3386cbf20055e86ccc8f3265ae1f5065a25490565b6102416103ed565b60008281527f02c0f6ea35402fd9c5779ec907d98e3386cbf20055e86ccc8f3265ae1f5065a4602090815260409182902082516101e081018452815473ffffffffffffffffffffffffffffffffffffffff908116825260018301541692810192909252600280820154938301939093526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e083015260088101546101008301526009810154610120830152600a810154610140830152600b8101549192909161016084019160ff90911690811115610328576103286104b8565b6002811115610339576103396104b8565b8152602001600b820160019054906101000a900460ff166004811115610361576103616104b8565b6004811115610372576103726104b8565b8152602001600b820160029054906101000a900460ff16600181111561039a5761039a6104b8565b60018111156103ab576103ab6104b8565b8152602001600b820160039054906101000a900460ff1660018111156103d3576103d36104b8565b60018111156103e4576103e46104b8565b90525092915050565b604051806101e00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006002811115610485576104856104b8565b815260200160008152602001600081526020016000905290565b6000602082840312156104b157600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106104f7576104f76104b8565b9052565b600581106104f7576104f76104b8565b600281106104f7576104f76104b8565b815173ffffffffffffffffffffffffffffffffffffffff1681526101e081016020830151610561602084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e0830152610100808401518184015250610120808401518184015250610140808401518184015250610160808401516105d5828501826104e7565b5050610180808401516105ea828501826104fb565b50506101a0808401516105ff8285018261050b565b50506101c0808401516106148285018261050b565b50509291505056fea2646970667358221220cc32d305c10832530f0f2cbb22dfc5d7e744f526d531c747b6babbbf83ce42c764736f6c63430008110033";

type L2NaffleViewConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L2NaffleViewConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L2NaffleView__factory extends ContractFactory {
  constructor(...args: L2NaffleViewConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<L2NaffleView> {
    return super.deploy(overrides || {}) as Promise<L2NaffleView>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): L2NaffleView {
    return super.attach(address) as L2NaffleView;
  }
  override connect(signer: Signer): L2NaffleView__factory {
    return super.connect(signer) as L2NaffleView__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L2NaffleViewInterface {
    return new utils.Interface(_abi) as L2NaffleViewInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L2NaffleView {
    return new Contract(address, _abi, signerOrProvider) as L2NaffleView;
  }
}

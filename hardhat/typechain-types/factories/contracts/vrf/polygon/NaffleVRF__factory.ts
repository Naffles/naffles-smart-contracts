/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  NaffleVRF,
  NaffleVRFInterface,
} from "../../../../contracts/vrf/polygon/NaffleVRF";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_subscriptionId",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "_gasLaneKeyHash",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "_callbackGasLimit",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "_requestConfirmations",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "InvalidChainlinkRequestId",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "naffleId",
        type: "uint256",
      },
    ],
    name: "naffleAlreadyRolled",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "naffleId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "winningNumber",
        type: "uint256",
      },
    ],
    name: "ChainlinkRequestFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "naffleId",
        type: "uint256",
      },
    ],
    name: "NaffleWinnerRolled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "COORDINATOR",
    outputs: [
      {
        internalType: "contract VRFCoordinatorV2Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VRFManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "chainlinkRequestStatus",
    outputs: [
      {
        internalType: "bool",
        name: "fulfilled",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "naffleId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainlinkVRFCallbackGasLimit",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainlinkVRFGasLaneKeyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainlinkVRFRequestConfirmations",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainlinkVRFSubscriptionId",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_naffleId",
        type: "uint256",
      },
    ],
    name: "drawWinner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "naffleIdToChainlinkRequestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_subscriptionId",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "_gasLaneKeyHash",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "_callbackGasLimit",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "_requestConfirmations",
        type: "uint16",
      },
    ],
    name: "setChainlinkVRFSettings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newVRFManager",
        type: "address",
      },
    ],
    name: "setVRFManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610dd9380380610dd983398101604081905261002f916101a4565b6001600160a01b03851660805261004533610089565b600180546001600160a01b0319166001600160a01b03871617905561006c848484846100d9565b5050600480546001600160a01b0319163317905550610237915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100e1610144565b600180546003949094556001600160a01b03909316600160a01b6001600160401b0395909516949094026001600160e01b031693909317600160e01b63ffffffff92909216919091021790556002805461ffff191661ffff909216919091179055565b6000546001600160a01b031633146101a25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b600080600080600060a086880312156101bc57600080fd5b85516001600160a01b03811681146101d357600080fd5b60208701519095506001600160401b03811681146101f057600080fd5b60408701516060880151919550935063ffffffff8116811461021157600080fd5b608087015190925061ffff8116811461022957600080fd5b809150509295509295909350565b608051610b80610259600039600081816102e801526103430152610b806000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a61161009757806399b981e71161006657806399b981e714610282578063cd11cb891461028b578063f2fde38b146102b7578063f869d7df146102ca57600080fd5b8063715018a6146102285780637a33eabc146102305780638da5cb5b14610243578063900ba2381461025457600080fd5b80633b2bcbf1116100d35780633b2bcbf11461017a5780635f16f641146101a557806360b2a56a146101b857806370411a9e146101cb57600080fd5b80630b684742146100fa5780630c2c9659146101205780631fe543e314610165575b600080fd5b6002546101089061ffff1681565b60405161ffff90911681526020015b60405180910390f35b60015461014c9074010000000000000000000000000000000000000000900467ffffffffffffffff1681565b60405167ffffffffffffffff9091168152602001610117565b610178610173366004610961565b6102dd565b005b60015461018d906001600160a01b031681565b6040516001600160a01b039091168152602001610117565b60045461018d906001600160a01b031681565b6101786101c6366004610a49565b610383565b6102066101d9366004610a49565b60056020526000908152604090208054600182015460029092015460ff8083169361010090930416919084565b6040805194151585529215156020850152918301526060820152608001610117565b6101786105c9565b61017861023e366004610a62565b6105dd565b6000546001600160a01b031661018d565b610274610262366004610a49565b60066020526000908152604090205481565b604051908152602001610117565b61027460035481565b6001546102a290600160e01b900463ffffffff1681565b60405163ffffffff9091168152602001610117565b6101786102c5366004610a62565b61061f565b6101786102d8366004610a92565b6106c9565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610375576040517f1cf993f40000000000000000000000000000000000000000000000000000000081523360048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044015b60405180910390fd5b61037f828261075b565b5050565b6004546001600160a01b031633146103c7576040517f3d693ada00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008181526006602090815260408083205483526005909152902054610100900460ff161515600103610429576040517fd4e12ae10000000000000000000000000000000000000000000000000000000081526004810182905260240161036c565b600180546003546002546040517f5d3b1d30000000000000000000000000000000000000000000000000000000008152600481019290925274010000000000000000000000000000000000000000830467ffffffffffffffff16602483015261ffff166044820152600160e01b820463ffffffff16606482015260848101929092526000916001600160a01b0390911690635d3b1d309060a4016020604051808303816000875af11580156104e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105069190610b02565b60408051608081018252600080825260016020808401828152848601848152606086018a81528886526005845287862096518754935161ffff199094169015157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff161761010093151593909302929092178655519285019290925590516002909301929092558581526006909152818120839055905191925083917fbee454eea62d52e41a94f72b9f676240085b1ae01840f6a331e5af4c29fb7c729190a25050565b6105d1610856565b6105db60006108ca565b565b6105e5610856565b600480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b610627610856565b6001600160a01b0381166106bd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161036c565b6106c6816108ca565b50565b6106d1610856565b600180546003949094556001600160a01b039093167401000000000000000000000000000000000000000067ffffffffffffffff95909516949094027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1693909317600160e01b63ffffffff92909216919091021790556002805461ffff191661ffff909216919091179055565b60008281526005602052604090208054610100900460ff166107ac576040517f6ef92ad70000000000000000000000000000000000000000000000000000000081526004810184905260240161036c565b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001178155815182906000906107e8576107e8610b1b565b602002602001015181600101819055508060020154837f58721825cfbcc107da84941232e34976d1c22ccfae5f5c935aacdf8ef7b57a2d8460008151811061083257610832610b1b565b602002602001015160405161084991815260200190565b60405180910390a3505050565b6000546001600160a01b031633146105db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161036c565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806040838503121561097457600080fd5b8235915060208084013567ffffffffffffffff8082111561099457600080fd5b818601915086601f8301126109a857600080fd5b8135818111156109ba576109ba610932565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811085821117156109fd576109fd610932565b604052918252848201925083810185019189831115610a1b57600080fd5b938501935b82851015610a3957843584529385019392850192610a20565b8096505050505050509250929050565b600060208284031215610a5b57600080fd5b5035919050565b600060208284031215610a7457600080fd5b81356001600160a01b0381168114610a8b57600080fd5b9392505050565b60008060008060808587031215610aa857600080fd5b843567ffffffffffffffff81168114610ac057600080fd5b935060208501359250604085013563ffffffff81168114610ae057600080fd5b9150606085013561ffff81168114610af757600080fd5b939692955090935050565b600060208284031215610b1457600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212205db7ec366f6dc4504912241dcfa645e7354b035af3ad3f2e85ee7c585e0a7fd064736f6c63430008110033";

type NaffleVRFConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NaffleVRFConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NaffleVRF__factory extends ContractFactory {
  constructor(...args: NaffleVRFConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vrfCoordinator: PromiseOrValue<string>,
    _subscriptionId: PromiseOrValue<BigNumberish>,
    _gasLaneKeyHash: PromiseOrValue<BytesLike>,
    _callbackGasLimit: PromiseOrValue<BigNumberish>,
    _requestConfirmations: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NaffleVRF> {
    return super.deploy(
      _vrfCoordinator,
      _subscriptionId,
      _gasLaneKeyHash,
      _callbackGasLimit,
      _requestConfirmations,
      overrides || {}
    ) as Promise<NaffleVRF>;
  }
  override getDeployTransaction(
    _vrfCoordinator: PromiseOrValue<string>,
    _subscriptionId: PromiseOrValue<BigNumberish>,
    _gasLaneKeyHash: PromiseOrValue<BytesLike>,
    _callbackGasLimit: PromiseOrValue<BigNumberish>,
    _requestConfirmations: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vrfCoordinator,
      _subscriptionId,
      _gasLaneKeyHash,
      _callbackGasLimit,
      _requestConfirmations,
      overrides || {}
    );
  }
  override attach(address: string): NaffleVRF {
    return super.attach(address) as NaffleVRF;
  }
  override connect(signer: Signer): NaffleVRF__factory {
    return super.connect(signer) as NaffleVRF__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NaffleVRFInterface {
    return new utils.Interface(_abi) as NaffleVRFInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NaffleVRF {
    return new Contract(address, _abi, signerOrProvider) as NaffleVRF;
  }
}

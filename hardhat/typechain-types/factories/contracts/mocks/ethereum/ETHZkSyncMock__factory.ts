/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ETHZkSyncMock,
  ETHZkSyncMockInterface,
} from "../../../../contracts/mocks/ethereum/ETHZkSyncMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "bool",
        name: "_proveL2MessageInclusionResult",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "_proveL2LogInclusionResult",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "_proveL1ToL2TransactionStatusResult",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EthWithdrawalFinalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "txId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "expirationTimestamp",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "txType",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "from",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "to",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasPerPubdataByteLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymaster",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256[4]",
            name: "reserved",
            type: "uint256[4]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256[]",
            name: "factoryDeps",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "paymasterInput",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "reservedDynamic",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct IMailbox.L2CanonicalTransaction",
        name: "transaction",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bytes[]",
        name: "factoryDeps",
        type: "bytes[]",
      },
    ],
    name: "NewPriorityRequest",
    type: "event",
  },
  {
    inputs: [],
    name: "called",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_l2BlockNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_l2MessageIndex",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_l2TxNumberInBlock",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "finalizeEthWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_l2GasLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_l2GasPerPubdataByteLimit",
        type: "uint256",
      },
    ],
    name: "l2TransactionBaseCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_l2TxHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_l2BlockNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_l2MessageIndex",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_l2TxNumberInBlock",
        type: "uint16",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
      {
        internalType: "enum TxStatus",
        name: "_status",
        type: "uint8",
      },
    ],
    name: "proveL1ToL2TransactionStatus",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_blockNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "l2ShardId",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isService",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "txNumberInBlock",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "value",
            type: "bytes32",
          },
        ],
        internalType: "struct L2Log",
        name: "_log",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "proveL2LogInclusion",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_blockNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint16",
            name: "txNumberInBlock",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct L2Message",
        name: "_message",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "proveL2MessageInclusion",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractL2",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_l2Value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_l2GasLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_l2GasPerPubdataByteLimit",
        type: "uint256",
      },
      {
        internalType: "bytes[]",
        name: "_factoryDeps",
        type: "bytes[]",
      },
      {
        internalType: "address",
        name: "_refundRecipient",
        type: "address",
      },
    ],
    name: "requestL2Transaction",
    outputs: [
      {
        internalType: "bytes32",
        name: "canonicalTxHash",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_l2Value",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_contractAddressL2",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_l2GasLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_l2GasPerPubdataByteLimit",
        type: "uint256",
      },
      {
        internalType: "bytes[]",
        name: "_factoryDeps",
        type: "bytes[]",
      },
      {
        internalType: "uint256",
        name: "_toMint",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_refundRecipient",
        type: "address",
      },
    ],
    name: "serializeL2Transaction",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "txType",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "from",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "to",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasPerPubdataByteLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymaster",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256[4]",
            name: "reserved",
            type: "uint256[4]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256[]",
            name: "factoryDeps",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "paymasterInput",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "reservedDynamic",
            type: "bytes",
          },
        ],
        internalType: "struct IMailbox.L2CanonicalTransaction",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000805463ffffffff1916630101010017905534801561002357600080fd5b50604051610bd3380380610bd38339810160408190526100429161009e565b6000805491151563010000000263ff00000019931515620100000262ff000019951515610100029590951662ffff00199093169290921793909317919091161790556100e1565b8051801515811461009957600080fd5b919050565b6000806000606084860312156100b357600080fd5b6100bc84610089565b92506100ca60208501610089565b91506100d860408501610089565b90509250925092565b610ae3806100f06000396000f3fe60806040526004361061007b5760003560e01c8063b473318e1161004e578063b473318e14610134578063e4948f4314610162578063eb67241914610191578063f36dc915146101d757600080fd5b8063042901c714610080578063263b7f8e146100c857806350f9b6cd146100f85780636c0960f914610112575b600080fd5b34801561008c57600080fd5b506100b361009b3660046103d7565b50506000546301000000900460ff1695945050505050565b60405190151581526020015b60405180910390f35b3480156100d457600080fd5b506100b36100e33660046104a5565b505060005462010000900460ff169392505050565b34801561010457600080fd5b506000546100b39060ff1681565b34801561011e57600080fd5b5061013261012d366004610617565b610204565b005b34801561014057600080fd5b5061015461014f3660046106ab565b61026b565b6040519081526020016100bf565b34801561016e57600080fd5b506100b361017d3660046106d7565b5050600054610100900460ff169392505050565b61015461019f36600461074c565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011781559998505050505050505050565b3480156101e357600080fd5b506101f76101f23660046107f9565b6102d0565b6040516100bf919061097e565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4e6f7420696d706c656d656e746564000000000000000000000000000000000060448201526064015b60405180910390fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4e6f7420696d706c656d656e74656400000000000000000000000000000000006044820152600090606401610262565b6102046040518061020001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200161032d610356565b815260200160608152602001606081526020016060815260200160608152602001606081525090565b60405180608001604052806004906020820280368337509192915050565b803561ffff8116811461038657600080fd5b919050565b60008083601f84011261039d57600080fd5b50813567ffffffffffffffff8111156103b557600080fd5b6020830191508360208260051b85010111156103d057600080fd5b9250929050565b600080600080600080600060c0888a0312156103f257600080fd5b87359650602088013595506040880135945061041060608901610374565b9350608088013567ffffffffffffffff81111561042c57600080fd5b6104388a828b0161038b565b90945092505060a08801356002811061045057600080fd5b8091505092959891949750929550565b803560ff8116811461038657600080fd5b8035801515811461038657600080fd5b803573ffffffffffffffffffffffffffffffffffffffff8116811461038657600080fd5b60008060008060008587036101208112156104bf57600080fd5b863595506020870135945060c07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0820112156104fa57600080fd5b5060405160c0810167ffffffffffffffff8282108183111715610546577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b8160405261055660408a01610460565b835261056460608a01610471565b602084015261057560808a01610374565b604084015261058660a08a01610481565b606084015260c0890135608084015260e089013560a084015291945061010088013591808311156105b657600080fd5b50506105c48882890161038b565b969995985093965092949392505050565b60008083601f8401126105e757600080fd5b50813567ffffffffffffffff8111156105ff57600080fd5b6020830191508360208285010111156103d057600080fd5b600080600080600080600060a0888a03121561063257600080fd5b873596506020880135955061064960408901610374565b9450606088013567ffffffffffffffff8082111561066657600080fd5b6106728b838c016105d5565b909650945060808a013591508082111561068b57600080fd5b506106988a828b0161038b565b989b979a50959850939692959293505050565b6000806000606084860312156106c057600080fd5b505081359360208301359350604090920135919050565b6000806000806000608086880312156106ef57600080fd5b8535945060208601359350604086013567ffffffffffffffff8082111561071557600080fd5b908701906060828a03121561072957600080fd5b9093506060870135908082111561073f57600080fd5b506105c48882890161038b565b600080600080600080600080600060e08a8c03121561076a57600080fd5b6107738a610481565b985060208a0135975060408a013567ffffffffffffffff8082111561079757600080fd5b6107a38d838e016105d5565b909950975060608c0135965060808c0135955060a08c01359150808211156107ca57600080fd5b506107d78c828d0161038b565b90945092506107ea905060c08b01610481565b90509295985092959850929598565b6000806000806000806000806000806000806101408d8f03121561081c57600080fd5b8c359b5060208d01359a5061083360408e01610481565b995061084160608e01610481565b985067ffffffffffffffff60808e0135111561085c57600080fd5b61086c8e60808f01358f016105d5565b909850965060a08d0135955060c08d0135945067ffffffffffffffff60e08e0135111561089857600080fd5b6108a88e60e08f01358f0161038b565b90945092506101008d013591506108c26101208e01610481565b90509295989b509295989b509295989b565b8060005b60048110156108f75781518452602093840193909101906001016108d8565b50505050565b6000815180845260005b8181101561092357602081850181015186830182015201610907565b506000602082860101526020601f19601f83011685010191505092915050565b600081518084526020808501945080840160005b8381101561097357815187529582019590820190600101610957565b509495945050505050565b6020815281516020820152602082015160408201526040820151606082015260608201516080820152608082015160a082015260a082015160c082015260c082015160e0820152600060e0830151610100818185015280850151915050610120818185015280850151915050610140818185015280850151915050610160610a08818501836108d4565b808501519150506102606101e08181860152610a286102808601846108fd565b9250610180860151601f198087860301610200880152610a4885836108fd565b94506101a088015191508087860301610220880152610a678583610943565b94506101c088015191508087860301610240880152610a8685836108fd565b94508288015192508087860301848801525050610aa383826108fd565b969550505050505056fea26469706673582212203a8e0796dda601c7dbadac75148ad2d7b55a63dd68db560d8fb3516ce56b765f64736f6c63430008110033";

type ETHZkSyncMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ETHZkSyncMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ETHZkSyncMock__factory extends ContractFactory {
  constructor(...args: ETHZkSyncMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _proveL2MessageInclusionResult: PromiseOrValue<boolean>,
    _proveL2LogInclusionResult: PromiseOrValue<boolean>,
    _proveL1ToL2TransactionStatusResult: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ETHZkSyncMock> {
    return super.deploy(
      _proveL2MessageInclusionResult,
      _proveL2LogInclusionResult,
      _proveL1ToL2TransactionStatusResult,
      overrides || {}
    ) as Promise<ETHZkSyncMock>;
  }
  override getDeployTransaction(
    _proveL2MessageInclusionResult: PromiseOrValue<boolean>,
    _proveL2LogInclusionResult: PromiseOrValue<boolean>,
    _proveL1ToL2TransactionStatusResult: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _proveL2MessageInclusionResult,
      _proveL2LogInclusionResult,
      _proveL1ToL2TransactionStatusResult,
      overrides || {}
    );
  }
  override attach(address: string): ETHZkSyncMock {
    return super.attach(address) as ETHZkSyncMock;
  }
  override connect(signer: Signer): ETHZkSyncMock__factory {
    return super.connect(signer) as ETHZkSyncMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ETHZkSyncMockInterface {
    return new utils.Interface(_abi) as ETHZkSyncMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ETHZkSyncMock {
    return new Contract(address, _abi, signerOrProvider) as ETHZkSyncMock;
  }
}

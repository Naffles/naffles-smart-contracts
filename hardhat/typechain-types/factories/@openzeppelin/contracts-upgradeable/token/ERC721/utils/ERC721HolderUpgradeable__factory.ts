/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  ERC721HolderUpgradeable,
  ERC721HolderUpgradeableInterface,
} from "../../../../../../@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x0002000000000002000100000001035500000000030100190000006003300270000000230030019d000000230330019700000001022001900000004e0000c13d000000040230008c0000005f0000413d000000000101043b0000002501100197000000260110009c0000005f0000c13d0000000001000416000000000110004c0000005f0000c13d0000000001000031000000040210008a0000002703000041000000800420008c000000000400001900000000040340190000002702200197000000000520004c000000000300a019000000270220009c00000000020400190000000002036019000000000220004c0000005f0000c13d00000001030003670000000402300370000000000202043b000000280220009c0000005f0000213d0000002402300370000000000202043b000000280220009c0000005f0000213d0000006402300370000000000202043b000000290420009c0000005f0000213d00000023042000390000002705000041000000000614004b0000000006000019000000000605801900000027011001970000002704400197000000000714004b0000000005008019000000000114013f000000270110009c00000000010600190000000001056019000000000110004c0000005f0000c13d0000000401200039000000000113034f000000000101043b0000002a0310009c000000480000813d0000001f03100039000000200400008a000000000343016f000000bf03300039000000000343016f0000002b043000410000002c0440009c000000580000813d0000002e0100004100000000001004350000004101000039000000040010043f0000002f010000410000008a000104300000008001000039000000400010043f0000000001000416000000000110004c0000005f0000c13d0000002001000039000001000010044300000120000004430000002401000041000000890001042e000000400030043f000000800010043f000000240320003900000000023100190000000004000031000000000242004b000000610000a13d00000000010000190000008a000104300000001f0210018f000000010330036700000005041002720000006e0000613d00000000050000190000000506500210000000000763034f000000000707043b000000a00660003900000000007604350000000105500039000000000645004b000000660000413d000000000520004c0000007d0000613d0000000504400210000000000343034f0000000302200210000000a004400039000000000504043300000000052501cf000000000525022f000000000303043b0000010002200089000000000323022f00000000022301cf000000000252019f0000000000240435000000a00110003900000000000104350000002601000041000000400200043d00000000001204350000002301000041000000230320009c000000000102401900000040011002100000002d011001c7000000890001042e0000008800000432000000890001042e0000008a00010430000000000000000000000000000000000000000000000000000000000000000000000000ffffffff0000000200000000000000000000000000000040000001000000000000000000ffffffff00000000000000000000000000000000000000000000000000000000150b7a02000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000000ffffffffffffffff0000000000000000000000000000000000000000000000010000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff000000000000008000000000000000000000000000000000000000200000000000000000000000004e487b710000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000240000000000000000000000001dd892cc779c9fbab98727707bbc269005e71b4db98dc9064b782ad9e366044e";

type ERC721HolderUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721HolderUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721HolderUpgradeable__factory extends ContractFactory {
  constructor(...args: ERC721HolderUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721HolderUpgradeable> {
    return super.deploy(overrides || {}) as Promise<ERC721HolderUpgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721HolderUpgradeable {
    return super.attach(address) as ERC721HolderUpgradeable;
  }
  override connect(signer: Signer): ERC721HolderUpgradeable__factory {
    return super.connect(signer) as ERC721HolderUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721HolderUpgradeableInterface {
    return new utils.Interface(_abi) as ERC721HolderUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721HolderUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721HolderUpgradeable;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IL1NaffleView,
  IL1NaffleViewInterface,
} from "../../../../interfaces/naffle/ethereum/IL1NaffleView";

const _abi = [
  {
    inputs: [],
    name: "getAdminRole",
    outputs: [
      {
        internalType: "bytes32",
        name: "adminRole",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFoundersKeyAddress",
    outputs: [
      {
        internalType: "address",
        name: "foundersKeyAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFoundersKeyPlaceholderAddress",
    outputs: [
      {
        internalType: "address",
        name: "foundersKeyPlaceholderAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMinimumNaffleDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "minimumNaffleDuration",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMinimumPaidTicketPriceInWei",
    outputs: [
      {
        internalType: "uint256",
        name: "minimumPaidTicketPriceInWei",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMinimumPaidTicketSpots",
    outputs: [
      {
        internalType: "uint256",
        name: "minimumPaidTicketSpots",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getNaffleById",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nftId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "naffleId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "winner",
            type: "address",
          },
          {
            internalType: "bool",
            name: "cancelled",
            type: "bool",
          },
          {
            internalType: "enum NaffleTypes.TokenContractType",
            name: "naffleTokenType",
            type: "uint8",
          },
        ],
        internalType: "struct NaffleTypes.L1Naffle",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getZkSyncAddress",
    outputs: [
      {
        internalType: "address",
        name: "zkSyncAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getZkSyncNaffleContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "zkSyncNaffleContractAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IL1NaffleView__factory {
  static readonly abi = _abi;
  static createInterface(): IL1NaffleViewInterface {
    return new utils.Interface(_abi) as IL1NaffleViewInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IL1NaffleView {
    return new Contract(address, _abi, signerOrProvider) as IL1NaffleView;
  }
}

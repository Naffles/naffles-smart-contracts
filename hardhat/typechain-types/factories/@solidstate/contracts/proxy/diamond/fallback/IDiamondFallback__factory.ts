/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IDiamondFallback,
  IDiamondFallbackInterface,
} from "../../../../../../@solidstate/contracts/proxy/diamond/fallback/IDiamondFallback";

const _abi = [
  {
    inputs: [],
    name: "Proxy__ImplementationIsNotContract",
    type: "error",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "getFallbackAddress",
    outputs: [
      {
        internalType: "address",
        name: "fallbackAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fallbackAddress",
        type: "address",
      },
    ],
    name: "setFallbackAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IDiamondFallback__factory {
  static readonly abi = _abi;
  static createInterface(): IDiamondFallbackInterface {
    return new utils.Interface(_abi) as IDiamondFallbackInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDiamondFallback {
    return new Contract(address, _abi, signerOrProvider) as IDiamondFallback;
  }
}
